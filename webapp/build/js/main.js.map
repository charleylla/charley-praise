{"version":3,"sources":["../../src/js/main.js"],"names":["Praise","constructor","box","palm","maxCount","_praiseCount","_init","bindEvents","bind","clickHander","callCollection","update","count","console","log","e","flag","className","numberEle","appendChild","setTimeout","element","axios","get","then","res","data","cat","err","addEventListener"],"mappings":";;;;;;AACA;;AAMA;AACe,MAAMA,MAAN,CAAY;AACvB;AACAC,gBAAYC,GAAZ,EAAgBC,IAAhB,EAAqBC,QAArB,EAA8B;AAC1B,aAAKF,GAAL,GAAWA,GAAX;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,KAAL;AACA,aAAKC,UAAL;AACH;;AAED;AACAD,YAAO;AACH,aAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA;AACA,aAAKC,WAAL,GAAmB,qBAAS,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAT,EAAqC,GAArC,CAAnB;AACA,aAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,aAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYH,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAED;AACAI,YAAO;AACH,UAAE,KAAKP,YAAP;AACA;;;;;AAKA;;AAEA,YAAG,KAAKA,YAAL,KAAsB,KAAKD,QAA9B,EAAuC;AACnC,iBAAKC,YAAL,GAAoB,CAApB;AACAQ,oBAAQC,GAAR,CAAY,KAAKT,YAAjB;AACA,mBAAO,KAAP;AACH;;AAEDQ,gBAAQC,GAAR,CAAY,KAAKT,YAAjB;AACA,eAAO,IAAP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;AAEDI,gBAAYM,CAAZ,EAAc;AACV;AACA,aAAKJ,MAAL;AACA;AACA,cAAMK,OAAO,KAAKJ,KAAL,EAAb;AACA,YAAG,CAACI,IAAJ,EAAS;AACL,iBAAKd,GAAL,CAASe,SAAT,GAAqB,SAArB;AACH,SAFD,MAEK;AACD,iBAAKf,GAAL,CAASe,SAAT,GAAqB,EAArB;AACH;;AAED;AACA,cAAMC,YAAY,uCAAlB;AACA;AACA,aAAKhB,GAAL,CAASiB,WAAT,CAAqBD,SAArB;AACA;AACA;AACAE,mBAAW,MAAI;AACXF,sBAAUD,SAAV,GAAsB,oBAAtB;AACA;AACA,iBAAKP,cAAL,CAAoBQ,SAApB;AACH,SAJD,EAIE,EAJF;AAKH;;AAED;AACA;AACAR,mBAAeW,OAAf,EAAuB;AACnBD,mBAAW,MAAI;AACX,sCAAcC,OAAd,EAAsB,KAAKnB,GAA3B;AACH,SAFD,EAEE,IAFF;AAGH;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAS,aAAQ;AACJW,cAAMC,GAAN,CAAU,eAAV,EAA2BC,IAA3B,CAAgCC,OAAO;AACnCZ,oBAAQC,GAAR,CAAYW,IAAIC,IAAhB;AACH,SAFD,EAEGC,GAFH,CAEOC,OAAO;AACVf,oBAAQC,GAAR,CAAY,SAAZ;AACH,SAJD;AAKH;;AAED;AACAP,iBAAY;AACR,aAAKJ,IAAL,CAAU0B,gBAAV,CAA2B,SAA3B,EAAqC,KAAKpB,WAA1C;AACH;AA5GsB;kBAANT,M,EARrB","file":"main.js","sourcesContent":["// 从 utils 中引入相关的方法\nimport {\n    throttle,\n    createPraiseNumberElement,\n    removeElement\n} from \"./utils.js\";\n\n// 定义点赞类\nexport default class Praise{\n    // 构造方法，接受三个参数：容器元素、点赞元素和最大点赞数\n    constructor(box,palm,maxCount){\n        this.box = box;\n        this.palm = palm;\n        this.maxCount = maxCount;\n        // 初始点赞数\n        this._praiseCount = 0;\n        this._init();\n        this.bindEvents();\n    }\n    \n    // _init 方法用来绑定 this，这是 RN 的经验\n    _init(){\n        this.bindEvents = this.bindEvents.bind(this)\n        // clickHander 用来对点击事件进行处理，使用节流函数包装\n        this.clickHander = throttle(this.clickHander.bind(this),500);\n        this.callCollection = this.callCollection.bind(this)\n        this.update = this.update.bind(this);\n    }\n\n    // 用来进行点赞记数\n    count(){\n        ++this._praiseCount;\n        /**\n         * 数组第一项用来控制手掌是否置灰（1表示置灰，0表示不置灰）\n         * 数组第二项用来控制是否显示+1（1表示显示，0表示不显示）\n         */\n\n        // 如果当前点赞数和最大点赞数相等，就将当前的点赞数置为0\n\n        if(this._praiseCount === this.maxCount){\n            this._praiseCount = 0;\n            console.log(this._praiseCount);\n            return false;\n        }\n\n        console.log(this._praiseCount);\n        return true;        \n\n        // 以下为原始代码\n        // /**\n        //  * 注意：\n        //  * 事实上这里不用使用一个数组进行条件判断，因为数组最后一项返回的一直是 1\n        //  * 也就是说不论手型置灰与否，+1 动画都会展现的\n        //  */\n        // if(this._praiseCount === this.maxCount){\n        //     console.log(this._praiseCount)\n        //     this._praiseCount = 0;\n        //     return [1,1];\n        // }\n        // console.log(this._praiseCount)\n        // return [0,1];\n    }\n    \n    clickHander(e){\n        // 更新数据\n        this.update();\n        // flag 是手型是否置灰的标志\n        const flag = this.count();\n        if(!flag){\n            this.box.className = \"disable\";\n        }else{\n            this.box.className = \"\";\n        }\n\n        // 生成一个 +1 的元素\n        const numberEle = createPraiseNumberElement();\n        // 将元素追加到容器中\n        this.box.appendChild(numberEle);\n        // 50ms 后改变样式，以获取动画效果\n        // 如果上来就将 className 设置为 number number-move,是不会有动画效果的\n        setTimeout(()=>{\n            numberEle.className = \"number number-move\";\n            // 元素展示后,将其传入 callCollection 方法,定时回收\n            this.callCollection(numberEle);\n        },50);\n    }\n\n    // 该方法用来定时清除生成的 +1 元素，接受容器元素 box 作为参数\n    // 防止页面中的元素过多\n    callCollection(element){\n        setTimeout(()=>{\n            removeElement(element,this.box);\n        },1000)\n    }\n\n    // 对 PhantomJS 做出的一些妥协\n    // async update(){\n    //     try{\n    //         const res = await axios.get(\"/index/update\")  \n    //         console.log(res.data)\n    //     }catch(e){\n    //         console.log(\"更新数据失败！\")\n    //     }\n    // }\n\n    update(){\n        axios.get(\"/index/update\").then(res => {\n            console.log(res.data)\n        }).cat(err => {\n            console.log(\"更新数据失败！\")\n        })\n    }\n\n    // 绑定事件\n    bindEvents(){\n        this.palm.addEventListener(\"mouseup\",this.clickHander)\n    }\n}"]}