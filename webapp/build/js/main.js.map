{"version":3,"sources":["../../src/js/main.js"],"names":["Praise","box","palm","maxCount","_praiseCount","_init","bindEvents","bind","clickHander","callCollection","console","log","e","flag","count","className","numberEle","appendChild","setTimeout","element","addEventListener"],"mappings":";;;;;;qjBAAA;;;AACA;;;;AAMA;IACqBA,M;AACjB;AACA,oBAAYC,GAAZ,EAAgBC,IAAhB,EAAqBC,QAArB,EAA8B;AAAA;;AAC1B,aAAKF,GAAL,GAAWA,GAAX;AACA,aAAKC,IAAL,GAAYA,IAAZ;AACA,aAAKC,QAAL,GAAgBA,QAAhB;AACA;AACA,aAAKC,YAAL,GAAoB,CAApB;AACA,aAAKC,KAAL;AACA,aAAKC,UAAL;AACH;;AAED;;;;;gCACO;AACH,iBAAKA,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA;AACA,iBAAKC,WAAL,GAAmB,qBAAS,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAT,EAAqC,GAArC,CAAnB;AACA,iBAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACH;;AAED;;;;gCACO;AACH,cAAE,KAAKH,YAAP;AACA;;;;;AAKA;;AAEA,gBAAG,KAAKA,YAAL,KAAsB,KAAKD,QAA9B,EAAuC;AACnC,qBAAKC,YAAL,GAAoB,CAApB;AACAM,wBAAQC,GAAR,CAAY,KAAKP,YAAjB;AACA,uBAAO,KAAP;AACH;;AAEDM,oBAAQC,GAAR,CAAY,KAAKP,YAAjB;AACA,mBAAO,IAAP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;oCAEWQ,C,EAAE;AAAA;;AACV;AACA,gBAAMC,OAAO,KAAKC,KAAL,EAAb;AACA,gBAAG,CAACD,IAAJ,EAAS;AACL,qBAAKZ,GAAL,CAASc,SAAT,GAAqB,SAArB;AACH,aAFD,MAEK;AACD,qBAAKd,GAAL,CAASc,SAAT,GAAqB,EAArB;AACH;;AAED;AACA,gBAAMC,YAAY,uCAAlB;AACA;AACA,iBAAKf,GAAL,CAASgB,WAAT,CAAqBD,SAArB;AACA;AACA;AACAE,uBAAW,YAAI;AACXF,0BAAUD,SAAV,GAAsB,oBAAtB;AACA;AACA,sBAAKN,cAAL,CAAoBO,SAApB;AACH,aAJD,EAIE,EAJF;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGH;;AAED;AACA;;;;uCACeG,O,EAAQ;AAAA;;AACnBD,uBAAW,YAAI;AACX,0CAAcC,OAAd,EAAsB,OAAKlB,GAA3B;AACH,aAFD,EAEE,IAFF;AAGH;;AAED;;;;qCACY;AACR,iBAAKC,IAAL,CAAUkB,gBAAV,CAA2B,SAA3B,EAAqC,KAAKZ,WAA1C;AACH;;;;;;kBAlHgBR,M","file":"main.js","sourcesContent":["// 从 utils 中引入相关的方法\r\nimport {\r\n    throttle,\r\n    createPraiseNumberElement,\r\n    removeElement\r\n} from \"./utils.js\";\r\n\r\n// 定义点赞类\r\nexport default class Praise{\r\n    // 构造方法，接受三个参数：容器元素、点赞元素和最大点赞数\r\n    constructor(box,palm,maxCount){\r\n        this.box = box;\r\n        this.palm = palm;\r\n        this.maxCount = maxCount;\r\n        // 初始点赞数\r\n        this._praiseCount = 0;\r\n        this._init();\r\n        this.bindEvents();\r\n    }\r\n    \r\n    // _init 方法用来绑定 this，这是 RN 的经验\r\n    _init(){\r\n        this.bindEvents = this.bindEvents.bind(this)\r\n        // clickHander 用来对点击事件进行处理，使用节流函数包装\r\n        this.clickHander = throttle(this.clickHander.bind(this),500);\r\n        this.callCollection = this.callCollection.bind(this)\r\n    }\r\n\r\n    // 用来进行点赞记数\r\n    count(){\r\n        ++this._praiseCount;\r\n        /**\r\n         * 数组第一项用来控制手掌是否置灰（1表示置灰，0表示不置灰）\r\n         * 数组第二项用来控制是否显示+1（1表示显示，0表示不显示）\r\n         */\r\n\r\n        // 如果当前点赞数和最大点赞数相等，就将当前的点赞数置为0\r\n\r\n        if(this._praiseCount === this.maxCount){\r\n            this._praiseCount = 0;\r\n            console.log(this._praiseCount);\r\n            return false;\r\n        }\r\n\r\n        console.log(this._praiseCount);\r\n        return true;        \r\n\r\n        // 以下为原始代码\r\n        // /**\r\n        //  * 注意：\r\n        //  * 事实上这里不用使用一个数组进行条件判断，因为数组最后一项返回的一直是 1\r\n        //  * 也就是说不论手型置灰与否，+1 动画都会展现的\r\n        //  */\r\n        // if(this._praiseCount === this.maxCount){\r\n        //     console.log(this._praiseCount)\r\n        //     this._praiseCount = 0;\r\n        //     return [1,1];\r\n        // }\r\n        // console.log(this._praiseCount)\r\n        // return [0,1];\r\n    }\r\n    \r\n    clickHander(e){\r\n        // flag 是手型是否置灰的标志\r\n        const flag = this.count();\r\n        if(!flag){\r\n            this.box.className = \"disable\";\r\n        }else{\r\n            this.box.className = \"\";\r\n        }\r\n\r\n        // 生成一个 +1 的元素\r\n        const numberEle = createPraiseNumberElement();\r\n        // 将元素追加到容器中\r\n        this.box.appendChild(numberEle);\r\n        // 50ms 后改变样式，以获取动画效果\r\n        // 如果上来就将 className 设置为 number number-move,是不会有动画效果的\r\n        setTimeout(()=>{\r\n            numberEle.className = \"number number-move\";\r\n            // 元素展示后,将其传入 callCollection 方法,定时回收\r\n            this.callCollection(numberEle);\r\n        },50);\r\n\r\n        // 以下为原始代码\r\n        // const [ _disableFlag, _countFlag] = this.count();\r\n        // // _disableFlag 用来判断是否将手型置灰\r\n        // if(_disableFlag){\r\n        //     this.box.className = \"disable\";\r\n        // }else{\r\n        //     this.box.className=\"\";\r\n        // }\r\n\r\n        // // _countFlag 用来判断是否展示 +1 动画\r\n        // // 当点赞数达到最大数目时，需要 +1 动画显示，手型置灰\r\n        // if(_countFlag){\r\n        //     // 生成一个 +1 的元素\r\n        //     const numberEle = createPraiseNumberElement();\r\n        //     // 将元素追加到容器中\r\n        //     this.box.appendChild(numberEle);\r\n        //     // 50ms 后改变样式，以获取动画效果\r\n        //     // 如果上来就将 className 设置为 number number-move,是不会有动画效果的\r\n        //     setTimeout(()=>{\r\n        //         numberEle.className = \"number number-move\";\r\n        //         // 元素展示后,将其传入 callCollection 方法,定时回收\r\n        //         this.callCollection(numberEle);\r\n        //     },50);\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    // 该方法用来定时清除生成的 +1 元素，接受容器元素 box 作为参数\r\n    // 防止页面中的元素过多\r\n    callCollection(element){\r\n        setTimeout(()=>{\r\n            removeElement(element,this.box);\r\n        },1000)\r\n    }\r\n\r\n    // 绑定事件\r\n    bindEvents(){\r\n        this.palm.addEventListener(\"mouseup\",this.clickHander)\r\n    }\r\n}"]}